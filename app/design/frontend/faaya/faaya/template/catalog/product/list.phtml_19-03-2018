 <?php
   $_helper = $this->helper('catalog/output');
   $currentCategory = Mage::registry('current_category');
   $_productCollections = Mage::getBlockSingleton('layernavigation/layernavigation')->getLoadedProductCollection($currentCategory->getId());
   $_productCollections = json_decode($_productCollections);
   //echo '<pre>';print_r($_productCollections);exit;
   $totalRecord = $_productCollections->totalRec;
   $totalRecord = explode("-",$totalRecord); 
   $_productCollection = $_productCollections->collection;
   /*echo '<pre>';
   print_r($_productCollection);
   echo count($_productCollection);*/
   //$totalRecord = count(Mage::getBlockSingleton('layernavigation/layernavigation')->getTotalProductCollection($currentCategory->getId()));        
   //$_productCollection = $this->getLoadedProductCollection();
   //echo count($_productCollection);
   /*   echo '<pre>';
   print_r($_productCollection->getData());
   exit;*/   
   //$totalProductColl = Mage::getBlockSingleton('layernavigation/layernavigation')->getTotalProductCollection($currentCategory);
   //$totalProduct = count($totalProductColl);
   $position = array();
    if($currentCategory){
        $categoryShowBoxPosition = $currentCategory->getShowBoxPosition();
        $categoryShowBoxPosition = explode(",",$categoryShowBoxPosition);
        foreach($categoryShowBoxPosition as $boxPosition){
            $boxPositionValue = explode(":",$boxPosition);
            $position[$boxPositionValue[1]] =  array("block"=>$boxPositionValue[0],"class"=>$boxPositionValue[2]);           
        }   
    }
    ?>
    <div class="filtered-options" style="display: none;"><a href="javascript:void(0);" class="clear-all"><?php echo $this->__('Clear All');?></a></div>
    <?php $catName = $currentCategory->getName();?>
   <?php  switch ($catName) {
            case "Ring":
                echo $ringSort = $this->getLayout()->createBlock('catalog/product')->setTemplate('catalog/product/sort/ring.phtml')->toHtml();
                break;
            case "Earrings":
                echo $earringsSort = $this->getLayout()->createBlock('catalog/product')->setTemplate('catalog/product/sort/earrings.phtml')->toHtml();
                break;
            case "Pendant":
                echo $pendentsSort = $this->getLayout()->createBlock('catalog/product')->setTemplate('catalog/product/sort/pendants.phtml')->toHtml();
                break;
            case "Bracelets":
                echo $braceletSort = $this->getLayout()->createBlock('catalog/product')->setTemplate('catalog/product/sort/bracelet.phtml')->toHtml();
                break;
            default:
                echo $ringSort = $this->getLayout()->createBlock('catalog/product')->setTemplate('catalog/product/sort/ring.phtml')->toHtml();
    }?>
<?php //exit('stop'); ?>
<?php //if(!$_productCollection->getcount()): ?> 
<?php if(count($_productCollection) <= 0): ?> 
<p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
<?php //echo $this->getToolbarHtml() ?>
<div class="category-products">
    <?php // List mode ?>
    <?php if($this->getMode()!='grid'): ?>
    <?php $_iterator = 0; ?>
    <ol class="products-list" id="products-list">
    <?php foreach ($_productCollection as $product): ?>
        <?php $_product = Mage::getModel('catalog/product')->load($product->entity_id);?>
         <?php if(array_key_exists($k,$position)): ?>
                <li class="item last <?php echo $position[$k]["class"];?>">
                    <?php $blockIdenty = $position[$k]["block"];?>
                    <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId($blockIdenty)->toHtml();?>
                </li>                    
                 <?php $k++;
                    endif; ?>
        <li class="item<?php if( ++$_iterator == sizeof($_productCollection) ): ?> last<?php endif; ?>">
            <?php // Product Image ?>
            <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                <?php $_imgSize = 625; ?>
                <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                     src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->keepFrame(false)->resize($_imgSize); ?>"
                     alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
            </a>
            <?php // Product description ?>
            <?php //echo $_product->getDefaultInd();?>
            <div class="product-shop">
                <div class="product-primary">
                    <?php $_productNameStripped = $this->stripTags($_product->getName(), null, true); ?>
                    <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped; ?>"><?php echo $_helper->productAttribute($_product, $_product->getName() , 'name'); ?></a></h2>
                    <?php if($_product->getRatingSummary()): ?>
                    <?php echo $this->getReviewsSummaryHtml($_product) ?>
                    <?php endif; ?>
                    <?php
                    // Provides extra blocks on which to hang some features for products in the list
                    // Features providing UI elements targeting this block will display directly below the product name
                    if ($this->getChild('name.after')) {
                        $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                        foreach ($_nameAfterChildren as $_nameAfterChildName) {
                            $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                            $_nameAfterChild->setProduct($_product);
                            echo $_nameAfterChild->toHtml();
                        }
                    }
                    ?>
                    <div class="desc">
                        <?php echo $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?>                        
                    </div>
                    <div class="preset-options">
                        <span class="label"><?php echo $this->__('Carat'); ?></span>
                        <div class="options">
                            <ul>
                                <li class="radio">
                                    <input type="radio" class="radio" id="1/3">
                                    <label class="name" for="1/3">1/3</label>
                                </li>
                                <li class="radio">
                                    <input type="radio" class="radio" id="1/3">
                                    <label class="name" for="1/3">1/2</label>
                                </li>
                                <li class="radio">
                                    <input type="radio" class="radio" id="1/3">
                                    <label class="name" for="1/3">3/4</label>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="preset-options metal-options">
                        <span class="label"><?php echo $this->__('Metal'); ?></span>
                        <div class="options">
                            <ul>
                                <li>
                                  <input type="radio" name="metal-1" id="metal-1">
                                  <label for="metal-1">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-1.png'); ?>" alt="">
                                  </label>
                                </li>
                                <li>
                                  <input type="radio" id="metal-2" name="metal-1" checked="">
                                  <label for="metal-2">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-2.png'); ?>" alt="">
                                  </label>
                                </li>
                                <li>
                                  <input type="radio" id="metal-3" name="metal-1">
                                  <label for="metal-3">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-3.png'); ?>" alt="">
                                  </label>
                                </li>
                                <li>
                                  <input type="radio" id="metal-4" name="metal-1">
                                  <label for="metal-4">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-4.png'); ?>" alt="">
                                  </label>
                                </li>
                                <li>
                                  <input type="radio" id="metal-5" name="metal-1">
                                  <label for="metal-5">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-5.png'); ?>" alt="">
                                  </label>
                                </li>
                                <li>
                                  <input type="radio" id="metal-6" name="metal-1">
                                  <label for="metal-6">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-6.png'); ?>" alt="">
                                  </label>
                                </li>
                                <li>
                                  <input type="radio" id="metal-7" name="metal-1">
                                  <label for="metal-7">
                                      <img src="<?php echo $this->getSkinUrl('images/metal-7.png'); ?>" alt="">
                                  </label>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="price-wrapper">
                        <span class="label"><?php echo $this->__('Total'); ?></span>
                        <?php echo $this->getPriceHtml($_product, true) ?>
                    </div>
                    <div class="button-proceed">
                        <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                            <p class="action"><button type="button" title="<?php echo $this->quoteEscape($this->__('Add to Cart')) ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('Proceed') ?></span></span></button></p>
                        <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                            <p class="action"><a title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a></p>
                        <?php else: ?>
                            <p class="action availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                        <?php endif; ?>  
                    </div>
                </div>
                <ul class="add-to-links">
                    <?php if ($this->helper('wishlist')->isAllow()) : ?>
                        <li>
                            <a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"></a>
                        </li>
                    <?php endif; ?>
                    <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                        <li>
                            <a href="#" onclick="ajaxCompare('<?php echo $_compareUrl?>','<?php echo $_product->getId()?>'); return false;" class="link-compare"></a>
                        </li>
                    <?php endif; ?>
                </ul>                 
            </div>
        </li>
    <?php  $k++;endforeach; ?>
    </ol>
    <a href="javascript:void(0)" class="load-more"><?php echo $this->__('Load More');?></a>
    <img src="<?php echo $this->getSkinUrl('images/spinner-m.gif')?>" style="display: none;" class="loading-icon" alt="Loading"/>
    <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>
    <!--<script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])</script>     -->
    <?php endif; ?>
</div>
<?php //$total = Mage::getSingleton('checkout/session')->getTotalRecord();?>
<?php //$total = $_SESSION["totalrec"];?>
<?php /*
<input type="hidden" value="<?php echo (intval($totalRecord[0]))?intval($totalRecord[0]):intval(0);?>" name="total-product" class="total-product" id="total-product"/>
<input type="hidden" value="<?php echo (intval($totalRecord[1]))?intval($totalRecord[1]):intval(0);?>" name="maxPrice" class="maxPrice" id="maxPrice"/>
<input type="hidden" value="<?php echo (intval($totalRecord[2]))?intval($totalRecord[2]):intval(0);?>" name="minPrice" class="minPrice" id="minPrice"/>
<input type="hidden" value="<?php echo (intval($totalRecord[1]))?intval($totalRecord[1]):intval(0);?>" name="resetMaxPrice" class="resetMaxPrice" id="resetMaxPrice"/>
<input type="hidden" value="<?php echo (intval($totalRecord[2]))?intval($totalRecord[2]):intval(0);?>" name="resetMinPrice" class="resetMinPrice" id="resetMinPrice"/>
<input type="hidden" value="1" name="limit-record" id="limit-record" class="limit-record"/>
<input type="hidden" value="0" name="filter-limit-record" id="filter-limit-record" class="filter-limit-record"/>
<input type="hidden" value="0" name="filter-flag" id="filter-flag" class="filter-flag"/>
<input type="hidden" value="<?php echo $currentCategory->getId();?>" name="categotyId" id="categotyId" class="categotyId"/>
<div id="custom-popup" style="display: none;" class="custom-popup category-popup">
    <div class="loading" style="display: none;"></div>
</div> */?>
<?php endif; ?> 
<input type="hidden" value="<?php echo (intval($totalRecord[0]))?intval($totalRecord[0]):intval(0);?>" name="total-product" class="total-product" id="total-product"/>
<input type="hidden" value="<?php echo (intval($totalRecord[1]))?intval($totalRecord[1]):intval(0);?>" name="maxPrice" class="maxPrice" id="maxPrice"/>
<input type="hidden" value="<?php echo (intval($totalRecord[2]))?intval($totalRecord[2]):intval(0);?>" name="minPrice" class="minPrice" id="minPrice"/>
<input type="hidden" value="<?php echo (intval($totalRecord[1]))?intval($totalRecord[1]):intval(0);?>" name="resetMaxPrice" class="resetMaxPrice" id="resetMaxPrice"/>
<input type="hidden" value="<?php echo (intval($totalRecord[2]))?intval($totalRecord[2]):intval(0);?>" name="resetMinPrice" class="resetMinPrice" id="resetMinPrice"/>
<input type="hidden" value="1" name="limit-record" id="limit-record" class="limit-record"/>
<input type="hidden" value="0" name="filter-limit-record" id="filter-limit-record" class="filter-limit-record"/>
<input type="hidden" value="0" name="filter-flag" id="filter-flag" class="filter-flag"/>
<input type="hidden" value="<?php echo $currentCategory->getId();?>" name="categotyId" id="categotyId" class="categotyId"/>
<div id="custom-popup" style="display: none;" class="custom-popup category-popup">
    <div class="loading" style="display: none;"></div>
</div>
<script type="text/javascript">
    var BASE_URL='<?php echo preg_replace('/(.*?)(index.php\/?)?/','\1',Mage::getBaseURL());?>';
    jQuery(document).ready(function () {
       /* var maxPrice =  parseInt(jQuery(".maxPrice").val());
        var minPrice =  parseInt(jQuery(".minPrice").val());*/
        var maxPrice = parseInt(jQuery("#resetMaxPrice").val());
        var minPrice = parseInt(jQuery("#resetMinPrice").val());  
        showLoadmore();
        updateMinMaxPrice(maxPrice,minPrice);
        jQuery('.load-more').click(function(){
           var minPrice = jQuery("#min-priceval").val();
           var maxPrice = jQuery("#max-priceval").val();
           var len = jQuery("li .shopby-attr-selected").length; 
           jQuery('.loading-icon').show();
           jQuery("p#totalRecord").text('');
           jQuery("#total-product").text('');
           jQuery("p#max-price").text('');
           jQuery("p#min-price").text('');
           var sort = {};           
           var orderby = "created_at";
           var sortby = "desc";
           var limit = parseInt(jQuery(".limit-record").val());
           if(jQuery(".list ol li a").hasClass("selected")){
            orderby = jQuery(".list ol li a.selected").attr("data-order");
            sortby = jQuery(".list ol li a.selected").attr("data-sort");
           }
           if(jQuery(this).hasClass('shopby-attr-selected')){
              jQuery(this).removeClass('shopby-attr-selected'); 
           }else{
                jQuery(this).addClass('shopby-attr-selected');
           }
           if(len > 0){
                limit = parseInt(jQuery(".filter-limit-record").val());
                jQuery(".filter-flag").val(1);
           }else{jQuery(".filter-flag").val(0);}                   
           jQuery("li .shopby-attr-selected").each(function(index) {
              if(sort[jQuery(this).attr('data-attname')] == undefined){
                sort[jQuery(this).attr('data-attname')] = [];
              }
              sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
           }); 
            var categotyId = parseInt(jQuery(".categotyId").val());        
            var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
            jQuery.ajax({
                url : url,
                dataType : 'html',
                type: 'POST',
                data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
                success : function(response) {
                  // alert(response);
                  jQuery('.loading-icon').hide();
                  var len = jQuery("li .shopby-attr-selected").length;
                  //updateMinMaxPrice(maxPrice,minPrice);
                 // alert(len);
                  if(len <= 0){ //alert('if');
                      jQuery(".products-list").append(response); 
                      var totalRec = jQuery("p#totalRecord").text(); 
                      jQuery("#total-product").val(totalRec); 
                      var limit = parseInt(jQuery(".limit-record").val());
                      var setpage = limit + 1;
                      jQuery(".limit-record").val(setpage);
                  }else{ //aler('else');
                      var filterFlag = jQuery(".filter-flag").val();
                      if(filterFlag == 0){
                        jQuery(".products-list").html('');
                        jQuery(".products-list").html(response);
                        //jQuery(".filter-flag").val(1);
                      }else{
                          jQuery(".products-list").append(response);
                      }
                      var limit = parseInt(jQuery(".filter-limit-record").val());
                      var setpage = limit + 1;
                      //alert(setpage);
                      jQuery(".filter-limit-record").val(setpage);
                  }
                  var len = jQuery("li .shopby-attr-selected").length;
                  var maxPrice = parseInt(jQuery("p#max-price").text()); 
                  var minPrice = parseInt(jQuery("p#min-price").text());                   
                  if(isNaN(maxPrice)){ maxPrice = parseInt(jQuery("#resetMaxPrice").val());}
                  if(isNaN(minPrice)){ minPrice = parseInt(jQuery("#resetMinPrice").val());} 
                  /*if(isNaN(maxPrice)){ maxPrice = 0;}
                  if(isNaN(minPrice)){ minPrice = 0;}*/
                  jQuery("#maxPrice").val(maxPrice); 
                  jQuery("#minPrice").val(minPrice);
                  jQuery("#min-priceval").val(minPrice);
                  jQuery("#max-priceval").val(maxPrice);
                  jQuery('#price_range_filter').slider("option","min",minPrice);
                  jQuery('#price_range_filter').slider("option","max",maxPrice);
                  showLoadmore();
                }
            });       
        });          
        /* Filter Option Request */
        jQuery('.shopby-attr').click(function(){ 
           //jQuery('.loading-icon').show();
            var minPrice = jQuery("#min-priceval").val();
            var maxPrice = jQuery("#max-priceval").val();
            jQuery(".category-products").addClass('loading');
            jQuery("p#totalRecord").text('');
            jQuery("p#max-price").text('');
            jQuery("p#min-price").text('');
            jQuery(".filter-flag").val(0); 
            jQuery(".filter-limit-record").val(0);
            var sort = {};
            var limit = parseInt(jQuery(".filter-limit-record").val());        
            var categotyId = parseInt(jQuery(".categotyId").val());            
            var orderby = "created_at";
            var sortby = "desc";
            var len = jQuery("li .shopby-attr-selected").length;            
            if(jQuery(this).hasClass("sort-by")){ 
               jQuery(".list ol li a").removeClass("selected"); 
               jQuery(this).addClass("selected"); 
               orderby = jQuery(this).attr("data-order");
               sortby = jQuery(this).attr("data-sort");
               /* Code for selected Karat with Metal Color*/
                   var karatLen = jQuery(".metal_karat ol").find('input.shopby-attr-selected').length;
                   if(karatLen ==0){
                      var metalLen = jQuery(".metal ol").find('input.shopby-attr-selected').length; 
                      if(metalLen > 0){
                         jQuery(".metal_karat ol li").find("input").eq(0).addClass("shopby-attr-selected");
                         jQuery(".metal_karat ol li").find("input").eq(0).prop('checked',true);
                      }
                   }
               /* End Code for selected Karat with Metal Color*/           
               jQuery("li .shopby-attr-selected" ).each(function(index) {
                  if(sort[jQuery(this).attr('data-attname')] == undefined){
                    sort[jQuery(this).attr('data-attname')] = [];
                  }
                  sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
                });     
            }
            else{ 
                if(jQuery(this).hasClass('shopby-attr-selected')){
                  jQuery(this).removeClass('shopby-attr-selected'); 
                  jQuery(this).removeAttr("checked");
                }else{
                    jQuery(this).addClass('shopby-attr-selected');
                } 
                /* Code for selected Karat with Metal Color*/
                   var karatLen = jQuery(".metal_karat ol").find('input.shopby-attr-selected').length;
                   if(karatLen ==0){
                      var metalLen = jQuery(".metal ol").find('input.shopby-attr-selected').length; 
                      if(metalLen > 0){
                         jQuery(".metal_karat ol li").find("input").eq(0).trigger('click');
                      }
                   }
               /* End Code for selected Karat with Metal Color*/
                   /* Code for selected Metal is 0*/
                   /*var metalLen = jQuery(".metal ol").find('input.shopby-attr-selected').length;
                   if(metalLen == 0){
                      var karatLen = jQuery(".metal_karat ol").find('input.shopby-attr-selected').length; 
                      if(karatLen > 0){
                         jQuery(".metal_karat ol li").find("input").removeClass("shopby-attr-selected");
                         jQuery(".metal_karat ol li").find("input").prop('checked',false);
                      }
                   }*/
                   /*else{ 
                         jQuery(".metal_karat ol li").find("input").eq(0).addClass("shopby-attr-selected");
                         jQuery(".metal_karat ol li").find("input").eq(0).prop('checked',true);
                   }*/
                /* End Code for selected Metal is 0 */
                
                // if checkbox size is greater than 0
                //var len = jQuery("li .shopby-attr-selected").length;
                //alert(len);
                jQuery("li .shopby-attr-selected" ).each(function(index) {
                  if(sort[jQuery(this).attr('data-attname')] == undefined){
                    sort[jQuery(this).attr('data-attname')] = [];
                  }
                  sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
                });
                var selectedsortLength = jQuery(".list ol li").find("a.selected").length;
                if(selectedsortLength > 0){
                    orderby = jQuery(".list ol li a.selected").attr("data-order");
                    sortby = jQuery(".list ol li a.selected").attr("data-sort");   
                }
            } 
            if(len > 0){
                //limit = parseInt(jQuery(".filter-limit-record").val());
                var filterlimitLength = parseInt(jQuery('#filter-limit-record').val());
                if(filterlimitLength > 0){
                    jQuery(".filter-flag").val(1);
                }else{
                    jQuery(".filter-flag").val(0);
                }
           }
           else{
               jQuery(".filter-flag").val(0);
           }
            /* Dislaying Select Added filter option */
               var attrlabel = jQuery(this).parents(".filter-options").find('.filter-label').text();
               if(jQuery.trim(attrlabel) !="Sort by"){ 
                attrlabel = jQuery.trim(attrlabel);
                attrClass = jQuery.trim(attrlabel.replace(/\s+/g, '_').toLowerCase());               
                var selectLenth = jQuery('.filtered-options').find("."+attrClass).length; 
                    if(selectLenth == 0){
                             var html = "<div class='block "+attrClass+"'>";
                             html += "<span class='label'>"+attrlabel+"</span>";
                             html += "<ul>"; 
                             jQuery("."+attrClass+" ol li .shopby-attr-selected").each(function(index) { 
                                html += "<li class="+jQuery(this).attr('data-id')+"><span>"+jQuery(this).attr('data-optionval')+"</span><a href='javascript:void(0);' data-class="+attrClass+" data-id="+jQuery(this).attr('data-id')+" class='remove-filter'>remove</a></li>";
                            }); 
                             html += "</ul>";
                             html += "</div>";
                             //alert(html);
                             jQuery(".filtered-options").append(html);
                             jQuery(".filtered-options").show();
                        
                    }else{
                        //alert(jQuery(".filtered-options ."+attrClass+" ul").find("."+jQuery(this).attr("data-id")).length);
                       if(jQuery(".filtered-options ."+attrClass+" ul").find("."+jQuery(this).attr("data-id")).length == 0){
                           var html = "<li class="+jQuery(this).attr('data-id')+"><span>"+jQuery(this).attr('data-optionval')+"</span><a href='javascript:void(0);' data-class="+attrClass+" data-id="+jQuery(this).attr('data-id')+" class='remove-filter'>remove</a></li>";
                           jQuery(".filtered-options ."+attrClass).find("ul").append(html);
                       }else{
                           jQuery(".filtered-options ."+attrClass).find("ul ."+jQuery(this).attr('data-id')).remove();
                           var isLength = jQuery(".filtered-options ."+attrClass).find("ul").find("li").length;
                           if(isLength == 0){
                               jQuery(".filtered-options").find("."+attrClass).remove();
                           }
                           if(jQuery(".filtered-options").find("ul").length == 0){
                                jQuery(".filtered-options").hide();    
                           }
                       } 
                    }
                    //jQuery(".filtered-options").show();
               }
            /* End Displaying Select Added filter option */ 
                      
            var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
            jQuery.ajax({
                url : url,
                dataType : 'html',
                type: 'POST',
                data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
                success : function(response) {
                  // alert(response); 
                   jQuery(".category-products").removeClass('loading');                
                   var filterFlag = jQuery(".filter-flag").val();
                   //alert(filterFlag);
                    if(filterFlag == 0){
                        jQuery(".products-list").html('');
                        jQuery(".products-list").html(response);
                        //jQuery(".filter-flag").val(1);
                    }else{ alert("else");
                         jQuery(".products-list").append(response);
                    }                      
                  /*var totalRec = jQuery("p#totalRecord").text();  
                  jQuery("#total-product").val(totalRec);*/
                  
                   /*if(len <= 0){ alert('if');
                      jQuery(".products-list").append(response); 
                      var totalRec = jQuery("p#totalRecord").text(); 
                      jQuery("#total-product").val(totalRec); 
                      var limit = parseInt(jQuery(".limit-record").val());
                      var setpage = limit + 1;
                      jQuery(".limit-record").val(setpage);
                  }else{ aler('else');
                      var filterFlag = jQuery(".filter-flag").val();
                      if(filterFlag == 0){
                        jQuery(".products-list").html('');
                        jQuery(".products-list").html(response);
                        //jQuery(".filter-flag").val(1);
                      }else{
                          jQuery(".products-list").append(response);
                      }
                      var limit = parseInt(jQuery(".filter-limit-record").val());
                      var setpage = limit + 1;
                      //alert(setpage);
                      jQuery(".filter-limit-record").val(setpage);
                  }*/
                  var totalRec = jQuery("p#totalRecord").text(); 
                  jQuery("#total-product").val(totalRec);
                  jQuery(".limit-record").val(1); 
                  var maxPrice = parseInt(jQuery("p#max-price").text()); 
                  var minPrice = parseInt(jQuery("p#min-price").text()); 
                  if(isNaN(maxPrice)){ maxPrice = parseInt(jQuery("#resetMaxPrice").val());}
                  if(isNaN(minPrice)){ minPrice = parseInt(jQuery("#resetMinPrice").val());}
                 /* if(isNaN(maxPrice)){ maxPrice = 0;}
                  if(isNaN(minPrice)){ minPrice = 0;}*/
                  jQuery("#maxPrice").val(maxPrice); 
                  jQuery("#minPrice").val(minPrice);
                  jQuery("#min-priceval").val(minPrice);
                  jQuery("#max-priceval").val(maxPrice);                                     
                  jQuery('#price_range_filter').slider("option","min",minPrice);
                  jQuery('#price_range_filter').slider("option","max",maxPrice);
                  //updateMinMaxPrice(maxPrice,minPrice);
                  /*var limit = parseInt(jQuery(".filter-limit-record").val());
                  var setpage = limit + 1;
                  jQuery(".filter-limit-record").val(setpage);*/
                  showLoadmore();                    
                }
            });
        }); 
        /* Select All Request */
    jQuery('.selectAll').click(function(){
           var minPrice = jQuery("#min-priceval").val();
           var maxPrice = jQuery("#max-priceval").val();  
           jQuery('.loading-icon').show();
           jQuery("p#totalRecord").text('');
           jQuery("p#max-price").text('');
           jQuery("p#min-price").text('');
           jQuery(".filter-flag").val(0);
           jQuery(".filter-limit-record").val(0);           
           var sort = {};
           var orderby = "desc";
           var sortby = "created_at";
           //var limit = parseInt(jQuery(".limit-record").val());
           if(jQuery(".list ol li a").hasClass("selected")){
            orderby = jQuery(".list ol li a.selected").attr("data-order");
            sortby = jQuery(".list ol li a.selected").attr("data-sort");
           }
            var limit = parseInt(jQuery(".filter-limit-record").val());        
            var categotyId = parseInt(jQuery(".categotyId").val()); 
           // jQuery(this).next().find(".shopby-attr").attr("checked","checked");
            jQuery(this).next().find(".shopby-attr").prop('checked',true);
            jQuery(this).next().find(".shopby-attr").addClass("shopby-attr-selected");             
            
            /* Code for selected Karat with Metal Color*/
                   var karatLen = jQuery(".metal_karat ol").find('input.shopby-attr-selected').length;
                   if(karatLen ==0){
                      var metalLen = jQuery(".metal ol").find('input.shopby-attr-selected').length; 
                      if(metalLen > 0){
                         jQuery(".metal_karat ol li").find("input").eq(0).trigger('click');
                      }
                   }
            /* End Code for selected Karat with Metal Color*/
            // if checkbox size is greater than 0
            var len = jQuery("li .shopby-attr-selected").length;
            jQuery("li .shopby-attr-selected" ).each(function(index) {
              if(sort[jQuery(this).attr('data-attname')] == undefined){
                sort[jQuery(this).attr('data-attname')] = [];
              }
              sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
            });
            
            /* Dislaying Select Added filter option */
                var attrlabel = jQuery(this).parents(".filter-options").find('.filter-label').text();
               if(jQuery.trim(attrlabel) !="Sort by"){  
                attrlabel = jQuery.trim(attrlabel);
                attrClass = jQuery.trim(attrlabel.replace(/\s+/g, '_').toLowerCase());               
                var selectLenth = jQuery('.filtered-options').find("."+attrClass).length; 
                    if(selectLenth == 0){
                          var html = "<div class='block "+attrClass+"'>";
                             html += "<span class='label'>"+attrlabel+"</span>";
                             html += "<ul>"; 
                             jQuery("."+attrClass+" ol li .shopby-attr-selected").each(function(index) { 
                                html += "<li class="+jQuery(this).attr('data-id')+"><span>"+jQuery(this).attr('data-optionval')+"</span><a href='javascript:void(0);' data-class="+attrClass+" data-id="+jQuery(this).attr('data-id')+" class='remove-filter'>remove</a></li>";
                            }); 
                             html += "</ul>";
                             html += "</div>";
                             //alert(html);
                             jQuery(".filtered-options").append(html);
                        
                    }else{
                        var html = '';
                        jQuery(".filtered-options ."+attrClass).find("li").remove();
                        jQuery("."+attrClass+" ol li .shopby-attr-selected").each(function(index) { 
                                html += "<li class="+jQuery(this).attr('data-id')+"><span>"+jQuery(this).attr('data-optionval')+"</span><a href='javascript:void(0);' data-class="+attrClass+" data-id="+jQuery(this).attr('data-id')+" class='remove-filter'>remove</a></li>";
                        }); 
                        jQuery(".filtered-options ."+attrClass).find("ul").append(html);  
                    }
                    jQuery(".filtered-options").show();            
               }
            /* End Displaying Select Added filter option */
            
            var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
            jQuery.ajax({
                url : url,
                dataType : 'html',
                type: 'POST',
                data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
                success : function(response) {
                  jQuery('.loading-icon').hide();
                  //jQuery(".products-list").html('');
                  //jQuery(".products-list").html(response);
                  var filterFlag = jQuery(".filter-flag").val();
                  if(filterFlag == 0){
                    jQuery(".products-list").html('');
                    jQuery(".products-list").html(response);
//                    jQuery(".filter-flag").val(1);
                  }else{
                      jQuery(".products-list").append(response);
                  }
                  /*var totalRec = jQuery("p#totalRecord").text();   
                  jQuery("#total-product").val(totalRec);*/
                  var totalRec = jQuery("p#totalRecord").text(); 
                  jQuery("#total-product").val(totalRec); 
                  jQuery(".limit-record").val(1);
                  var maxPrice = parseInt(jQuery("p#max-price").text()); 
                  var minPrice = parseInt(jQuery("p#min-price").text()); 
                  if(isNaN(maxPrice)){ maxPrice = parseInt(jQuery("#resetMaxPrice").val());}
                  if(isNaN(minPrice)){ minPrice = parseInt(jQuery("#resetMinPrice").val());}
                  /*if(isNaN(maxPrice)){ maxPrice = 0;}
                  if(isNaN(minPrice)){ minPrice = 0;}*/
                  jQuery("#maxPrice").val(maxPrice); 
                  jQuery("#minPrice").val(minPrice);
                  jQuery("#min-priceval").val(minPrice);
                  jQuery("#max-priceval").val(maxPrice);  
                  jQuery('#price_range_filter').slider("option","min",minPrice);
                  jQuery('#price_range_filter').slider("option","max",maxPrice);
                  //updateMinMaxPrice(maxPrice,minPrice);
                  /* var limit = parseInt(jQuery(".filter-limit-record").val());
                   var setpage = limit + 1;
                   jQuery(".filter-limit-record").val(setpage);*/
                   showLoadmore();                    
                }
            });
        });
    jQuery(document).on('click',".remove-filter",function(){
       var minPrice = jQuery("#min-priceval").val();
       var maxPrice = jQuery("#max-priceval").val(); 
       var optionId = jQuery(this).attr("data-id");
       var attrClass = jQuery(this).attr("data-class");
       jQuery(".category-products").addClass('loading');
       jQuery("#"+optionId).removeClass("shopby-attr-selected");
       jQuery("#"+optionId).removeAttr('checked');
       jQuery(".filtered-options ul li."+optionId).remove();
       var isLength = jQuery(".filtered-options ."+attrClass).find("ul").find("li").length;
       // If all option removed then remove Label
       if(isLength == 0){
           jQuery(".filtered-options").find("."+attrClass).remove();
       } 
       if(jQuery(".filtered-options").find("ul").length == 0){
            jQuery(".filtered-options").hide();    
       }
        jQuery('.loading-icon').show();
        jQuery("p#totalRecord").text('');
        jQuery("p#max-price").text('');
        jQuery("p#min-price").text('');
        jQuery(".filter-flag").val(0); 
        jQuery(".filter-limit-record").val(0);
        var sort = {};
        var limit = parseInt(jQuery(".filter-limit-record").val());        
        var categotyId = parseInt(jQuery(".categotyId").val());            
        var orderby = "desc";
        var sortby = "created_at";
        if(jQuery(".list ol li a").hasClass("selected")){
            orderby = jQuery(".list ol li a.selected").attr("data-order");
            sortby = jQuery(".list ol li a.selected").attr("data-sort");
        }
        /* Code for selected Metal is 0*/
           var metalLen = jQuery(".metal ol").find('input.shopby-attr-selected').length;
           if(metalLen == 0){
              var karatLen = jQuery(".metal_karat ol").find('input.shopby-attr-selected').length; 
              if(karatLen > 0){
                 jQuery(".metal_karat ol li").find("input").removeClass("shopby-attr-selected");
                 jQuery(".metal_karat ol li").find("input").prop('checked',false);
              }
           }
        /* End Code for selected Metal is 0 */       
        jQuery("li .shopby-attr-selected" ).each(function(index) {
          if(sort[jQuery(this).attr('data-attname')] == undefined){
            sort[jQuery(this).attr('data-attname')] = [];
          }
          sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
        });            
        var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
        jQuery.ajax({
            url : url,
            dataType : 'html',
            type: 'POST',
            data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
            success : function(response) {
               jQuery('.loading-icon').hide();
               jQuery(".category-products").removeClass('loading');                 
               var filterFlag = jQuery(".filter-flag").val();
                if(filterFlag == 0){
                    jQuery(".products-list").html('');
                    jQuery(".products-list").html(response);
                    //jQuery(".filter-flag").val(1);
                }else{
                     jQuery(".products-list").append(response);
                }                      
              /*var totalRec = jQuery("p#totalRecord").text();  
              jQuery("#total-product").val(totalRec);  */
              var totalRec = jQuery("p#totalRecord").text(); 
              jQuery("#total-product").val(totalRec); 
              jQuery(".limit-record").val(1);
              var maxPrice = parseInt(jQuery("p#max-price").text()); 
              var minPrice = parseInt(jQuery("p#min-price").text()); 
              if(isNaN(maxPrice)){ maxPrice = parseInt(jQuery("#resetMaxPrice").val());}
              if(isNaN(minPrice)){ minPrice = parseInt(jQuery("#resetMinPrice").val());}
              /*if(isNaN(maxPrice)){ maxPrice = 0;}
              if(isNaN(minPrice)){ minPrice = 0;}*/
              jQuery("#maxPrice").val(maxPrice); 
              jQuery("#minPrice").val(minPrice); 
              /*jQuery("#price_range_filter").slider("values", 0, minPrice);
              jQuery("#price_range_filter").slider("values", 1, maxPrice);
              jQuery("#min-priceval").val(minPrice);
              jQuery("#max-priceval").val(maxPrice);*/
              jQuery("#min-priceval").val(minPrice);
              jQuery("#max-priceval").val(maxPrice);
              jQuery('#price_range_filter').slider("option","min",minPrice);
              jQuery('#price_range_filter').slider("option","max",maxPrice);
              //updateMinMaxPrice(maxPrice,minPrice);  
              showLoadmore();                    
            }
        }); 
    }); 
    jQuery(document).on('click',".clear-all",function(){
        var minPrice = jQuery("#min-priceval").val();
        var maxPrice = jQuery("#max-priceval").val();
        jQuery(".category-products").addClass('loading'); 
        jQuery("p#totalRecord").text('');
        jQuery("p#max-price").text('');
        jQuery("p#min-price").text('');
        jQuery(".filter-flag").val(0); 
        jQuery(".filter-limit-record").val(0);
        var sort = {};
        var limit = parseInt(jQuery(".filter-limit-record").val());        
        var categotyId = parseInt(jQuery(".categotyId").val());            
        var orderby = "desc";
        var sortby = "created_at";
        if(jQuery(".list ol li a").hasClass("selected")){
            orderby = jQuery(".list ol li a.selected").attr("data-order");
            sortby = jQuery(".list ol li a.selected").attr("data-sort");
        }
        jQuery(".filtered-options").find(".block").remove();
        jQuery(".filtered-options").hide();  
        jQuery("li .shopby-attr-selected").each(function(index) {
              jQuery(this).removeClass('shopby-attr-selected'); 
              jQuery(this).removeAttr("checked"); 
        });                    
        var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
        jQuery.ajax({
            url : url,
            dataType : 'html',
            type: 'POST',
            data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
            success : function(response) {
               jQuery('.loading-icon').hide();
               jQuery(".category-products").removeClass('loading');                 
               var filterFlag = jQuery(".filter-flag").val();
                if(filterFlag == 0){
                    jQuery(".products-list").html('');
                    jQuery(".products-list").html(response);
                }else{
                     jQuery(".products-list").append(response);
                }                      
              /*var totalRec = jQuery("p#totalRecord").text();  
              jQuery("#total-product").val(totalRec);*/
              var totalRec = jQuery("p#totalRecord").text(); 
              jQuery("#total-product").val(totalRec);
              jQuery(".limit-record").val(1);
              var maxPrice = parseInt(jQuery("p#max-price").text()); 
              var minPrice = parseInt(jQuery("p#min-price").text()); 
              if(isNaN(maxPrice)){ maxPrice = parseInt(jQuery("#resetMaxPrice").val());}
              if(isNaN(minPrice)){ minPrice = parseInt(jQuery("#resetMinPrice").val());}
             /* if(isNaN(maxPrice)){ maxPrice = 0;}
              if(isNaN(minPrice)){ minPrice = 0;}*/
              jQuery("#maxPrice").val(maxPrice); 
              jQuery("#minPrice").val(minPrice);               
              //updateMinMaxPrice(maxPrice,minPrice);
              jQuery("#min-priceval").val(minPrice);
              jQuery("#max-priceval").val(maxPrice);
              jQuery('#price_range_filter').slider("option","min",minPrice);
              jQuery('#price_range_filter').slider("option","max",maxPrice);
              showLoadmore();                    
            }
        }); 
    }); 
    /* Price AJAX call*/     
    jQuery(".updateclass").change(function() {  
      jQuery("#price_range_filter").slider("values", 0, jQuery("#min-priceval").val());
      jQuery("#price_range_filter").slider("values", 1, jQuery("#max-priceval").val()); 
      var minPrice = jQuery("#min-priceval").val();
      var maxPrice = jQuery("#max-priceval").val();
      //jQuery('.loading-icon').show();
            jQuery(".category-products").addClass('loading');
            jQuery("p#totalRecord").text('');
            jQuery("p#max-price").text('');
            jQuery("p#min-price").text('');
            jQuery(".filter-flag").val(0); 
            jQuery(".filter-limit-record").val(0);
            var sort = {};
            var limit = parseInt(jQuery(".filter-limit-record").val());        
            var categotyId = parseInt(jQuery(".categotyId").val());            
            var orderby = "created_at";
            var sortby = "desc";           
            if(jQuery(".list ol li a").hasClass("selected")){
                orderby = jQuery(".list ol li a.selected").attr("data-order");
                sortby = jQuery(".list ol li a.selected").attr("data-sort");
            }
            jQuery("li .shopby-attr-selected" ).each(function(index) {
              if(sort[jQuery(this).attr('data-attname')] == undefined){
                sort[jQuery(this).attr('data-attname')] = [];
              }
              sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
            });            
            var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
            jQuery.ajax({
                url : url,
                dataType : 'html',
                type: 'POST',
                data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
                success : function(response) {
                   jQuery(".category-products").removeClass('loading');                
                    var filterFlag = jQuery(".filter-flag").val();
                    if(filterFlag == 0){
                        jQuery(".products-list").html('');
                        jQuery(".products-list").html(response);
                    }else{
                         jQuery(".products-list").append(response);
                    }                      
                  var totalRec = jQuery("p#totalRecord").text(); 
                  jQuery("#total-product").val(totalRec);
                  jQuery(".limit-record").val(1); 
                 /* var maxPrice = parseInt(jQuery("p#max-price").text()); 
                  var minPrice = parseInt(jQuery("p#min-price").text());*/
                  jQuery("#maxPrice").val(maxPrice); 
                  jQuery("#minPrice").val(minPrice);                  
                  //updateMinMaxPrice(maxPrice,minPrice);
                  showLoadmore();                    
                }
            });    
    });
   /* jQuery(document).on('stop','#price_range_filter',function(event){
      jQuery(".updateclass").trigger('change');
    });*/
    jQuery('.popop-product').click(function(){
        var productId = jQuery(this).attr('data-productId');
        url = '<?php echo $this->getUrl('wizard/index/getpopupproduct');?>';
        jQuery('#custom-popup').hide();
        jQuery("#custom-popup .loading").show();
        jQuery.ajax( {
            url : url,
            dataType : 'html',
            type: 'POST',
            data: {id: productId},
            success : function(response) {
              //alert(response);
                jQuery('#custom-popup .loading').removeClass();
                jQuery('#custom-popup').show();
                jQuery('.custom-popup').html(response);
                setTimeout(function(){ popupSlider(); }, 500);
            }
        });     
    });
    /*-------- END LOAD MORE PRODUCT SCRIPT -------*/        
        jQuery('.compare-min-icon').click(function() {
            jQuery(this).next().toggleClass('active')
        })
        jQuery('.top-toolbar .close-icon').click(function() {
            jQuery('.compare-content').removeClass('active');
            jQuery('.compare-sidebar-window').removeClass('fullwidth');            
            jQuery('html').removeClass('fullwidth-window');
        })
        
        jQuery('.top-toolbar .minimize-icon').click(function() {
            jQuery('.compare-sidebar-window').removeClass('fullwidth');
            jQuery('html').removeClass('fullwidth-window');
        })
        
        jQuery('.top-toolbar .fullscreen-icon').click(function() { 
            jQuery('.compare-sidebar-window').removeClass('fullwidth');
            jQuery('.compare-sidebar-window').addClass('fullwidth');
            jQuery('html').addClass('fullwidth-window');
            
        })
        jQuery('.compare-min-icon').addClass('loading');
        jQuery.get( BASE_URL+"wizard/compare", function( data ) {
          jQuery( ".more-content" ).html( data );
          jQuery('.compare-sidebar-window.fullwidth .product-shop').mCustomScrollbar("destroy");
          jQuery('.compare-sidebar-window .product-shop').mCustomScrollbar();   
          jQuery('.compare-min-icon').removeClass('loading');
          blankHtml();
        });

        jQuery('.compare-min-icon').click(function() { 
            jQuery('.catalog-category-view .category-products, .catalog-category-view .block-layered-nav, .catalog-category-view .footer-container').addClass('compare-active');            
        })
        jQuery('.top-toolbar .close-icon').click(function() { 
            jQuery('.catalog-category-view .category-products, .catalog-category-view .block-layered-nav, .catalog-category-view .footer-container').removeClass('compare-active');            
        });
        /* Active menu Script*/
        jQuery(".filter-options .filter-label").click(function () {  
          if(jQuery(".filter-options .filter-label").hasClass("active")){ 
             if(jQuery(this).hasClass('active')){
                 jQuery(".filter-options .filter-label").removeClass("active"); 
                 jQuery(".filter-options .list").removeClass("active");
             }else{
                jQuery(".filter-options .filter-label").removeClass("active"); 
                jQuery(".filter-options .list").removeClass("active"); 
                jQuery(this).addClass('active');
                jQuery(this).next().addClass('active');  
                equelItems();
             }
          }else{
             jQuery(".filter-options .filter-label").removeClass("active"); 
             jQuery(".filter-options .list").removeClass("active");
             jQuery(this).addClass('active');
             jQuery(this).next().addClass('active');
              equelItems();
          }      
        });    
    });     
    
    function ajaxCompare(url,id){ 
        jQuery('.compare-min-icon').addClass('loading');
        url = url.replace("ajaxwishlist/index/compare","catalog/product_compare/add");
        url += 'isAjax/1/';
        jQuery.ajax( {
            url : url,
            dataType : 'json',
            success : function(data) {
                jQuery.get( BASE_URL+"wizard/compare", function( data ) {
                  jQuery( ".more-content" ).html( data );
                  jQuery('.compare-sidebar-window.fullwidth .product-shop').mCustomScrollbar("destroy");
                  jQuery('.compare-sidebar-window .product-shop').mCustomScrollbar();   
                  jQuery('.compare-min-icon').removeClass('loading');
                  blankHtml();
                });
            },error: function(xhr){
                jQuery.get( BASE_URL+"wizard/compare", function( data ) {
                  jQuery( ".more-content" ).html( data );
                  jQuery('.compare-sidebar-window.fullwidth .product-shop').mCustomScrollbar("destroy");
                  jQuery('.compare-sidebar-window .product-shop').mCustomScrollbar();       
                  jQuery('.compare-min-icon').removeClass('loading');
                  blankHtml();
                });
            }
        });
    }    
    function blankHtml() {
        var blank = jQuery('.more-content').html();
        blank = jQuery.trim(blank);        
        if(blank == ''){
            jQuery('.compare-min-icon').addClass('blank');
        } else {        
            jQuery('.compare-min-icon').removeClass('blank');
        }
    }
    function showLoadmore(){
        var totalRing = parseInt(jQuery(".total-product").val());
        var liLength =  parseInt(jQuery(".products-list > li").length);
       /* alert(totalRing);
        alert(liLength);*/
        if(liLength < totalRing){
           jQuery(".load-more").show() 
        }else{
            jQuery(".load-more").hide() 
        }
    } 
    function updateMinMaxPrice(maxPrice,minPrice){ 
      //jQuery(function() {
        jQuery("#price_range_filter").slider({ 
          range: true,
          min: minPrice,
          max: maxPrice,
          values: [minPrice,maxPrice],
          slide: function(event, ui) { 
            jQuery("#min-priceval").val(ui.values[0]);
            jQuery("#max-priceval").val(ui.values[1]);
          },
          stop: function(event, ui) { 
            jQuery("#min-priceval").val(ui.values[0]);
            jQuery("#max-priceval").val(ui.values[1]);
            updatePriceSldier();
          }
        });
        jQuery("#min-priceval").val(jQuery("#price_range_filter").slider("values", 0));
        jQuery("#max-priceval").val(jQuery("#price_range_filter").slider("values", 1));
 } 
 function updatePriceSldier(){
     jQuery("#price_range_filter").slider("values", 0, jQuery("#min-priceval").val());
     jQuery("#price_range_filter").slider("values", 1, jQuery("#max-priceval").val()); 
      var minPrice = jQuery("#min-priceval").val();
      var maxPrice = jQuery("#max-priceval").val();
      //jQuery('.loading-icon').show();
            jQuery(".category-products").addClass('loading');
            jQuery("p#totalRecord").text('');
            jQuery("p#max-price").text('');
            jQuery("p#min-price").text('');
            jQuery(".filter-flag").val(0); 
            jQuery(".filter-limit-record").val(0);
            var sort = {};
            var limit = parseInt(jQuery(".filter-limit-record").val());        
            var categotyId = parseInt(jQuery(".categotyId").val());            
            var orderby = "created_at";
            var sortby = "desc";           
            if(jQuery(".list ol li a").hasClass("selected")){
                orderby = jQuery(".list ol li a.selected").attr("data-order");
                sortby = jQuery(".list ol li a.selected").attr("data-sort");
            }
            jQuery("li .shopby-attr-selected" ).each(function(index) {
              if(sort[jQuery(this).attr('data-attname')] == undefined){
                sort[jQuery(this).attr('data-attname')] = [];
              }
              sort[jQuery(this).attr('data-attname')].push(jQuery(this).val());
            });  
            /*alert(minPrice);          
            alert(maxPrice);*/          
            var url = '<?php echo $this->getUrl('layernavigation/index/index');?>';
            jQuery.ajax({
                url : url,
                dataType : 'html',
                type: 'POST',
                data: {limit: limit,categotyId:categotyId,sort:sort,orderby:orderby,sortby:sortby,minPrice:minPrice,maxPrice:maxPrice},
                success : function(response) {
                   jQuery(".category-products").removeClass('loading');                
                    var filterFlag = jQuery(".filter-flag").val();
                    if(filterFlag == 0){
                        jQuery(".products-list").html('');
                        jQuery(".products-list").html(response);
                    }else{
                         jQuery(".products-list").append(response);
                    }                      
                  var totalRec = jQuery("p#totalRecord").text(); 
                  jQuery("#total-product").val(totalRec);
                  jQuery(".limit-record").val(1); 
                 /* var maxPrice = parseInt(jQuery("p#max-price").text()); 
                  var minPrice = parseInt(jQuery("p#min-price").text());*/
                  jQuery("#maxPrice").val(maxPrice); 
                  jQuery("#minPrice").val(minPrice);                  
                  //updateMinMaxPrice(maxPrice,minPrice);
                  showLoadmore();                    
                }
            });
 }
    /*function updateMinMaxPrice(maxPrice,minPrice){
      jQuery(function() {
        jQuery("#price_range_filter").slider({
          range: true,
          min: minPrice,
          max: maxPrice,
          values: [minPrice,maxPrice],
          slide: function(event, ui) {
            jQuery("#min-priceval").val(ui.values[0]);
            jQuery("#max-priceval").val(ui.values[1]);
          }
        });
        jQuery("#min-priceval").val(jQuery("#price_range_filter").slider("values", 0));
        jQuery("#max-priceval").val(jQuery("#price_range_filter").slider("values", 1));
      });
    }*/ 
</script>

<div class="compare-sidebar-window">
    <div class="compare-min-icon">
        <a href="javascript:void(0);"><img src="<?php echo $this->getSkinUrl('images/compare-sidebar-icon.gif'); ?>" alt="" /></a>
    </div>
    <div class="compare-content">
        <div class="top-toolbar">
            <a class="close-icon" href="javascript:void(0);"><img src="<?php echo $this->getSkinUrl('images/close-icon1.png'); ?>" width="19" alt=""></a>
            <a class="minimize-icon" href="javascript:void(0);"><img src="<?php echo $this->getSkinUrl('images/minimize-icon.png'); ?>" alt=""></a>
            <a class="fullscreen-icon" href="javascript:void(0);"><img src="<?php echo $this->getSkinUrl('images/fullscreen-icon.png'); ?>" alt=""></a>
        </div>
        <div class="more-content">
            
        </div>
       
    </div>
</div>
